networks:
  backend:

volumes:
  gainline-data:
    name: gainline-data
  ui-node-modules:

services:
  gainline-db:
    image: postgres:16
    container_name: gainline-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: gainline
      POSTGRES_USER: gainline
      POSTGRES_PASSWORD: gainline
    volumes:
      - gainline-data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "gainline"]
      interval: 5s
      retries: 10

  gainline-migrate:
    image: migrate/migrate
    volumes:
      - ./database/migrations:/migrations
    depends_on:
      gainline-db:
        condition: service_healthy
    restart: "no"
    entrypoint: [
      "sh", "-c",
      "sleep 5 && migrate -path=/migrations -database=postgres://gainline:gainline@gainline-db:5432/gainline?sslmode=disable up"
    ]
    networks:
      - backend

  gainline-api:
    container_name: gainline-api
    build:
      context: ./api
    depends_on:
      gainline-db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DB_HOST: gainline-db
      DB_PORT: 5432
      DB_USER: gainline
      DB_PASSWORD: gainline
      DB_DATABASE: gainline
      DB_SSL_MODE: disable
      PORT: 8080
    networks:
      - backend
    restart: unless-stopped


  gainline-ui:
    container_name: gainline-ui
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "4200:80"  # maps container nginx port 80 to host 4200
    depends_on:
      - gainline-api
    networks:
      - backend
    restart: unless-stopped
