// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type GameStatus string

const (
	GameStatusScheduled GameStatus = "scheduled"
	GameStatusPlaying   GameStatus = "playing"
	GameStatusFinished  GameStatus = "finished"
)

func (e *GameStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GameStatus(s)
	case string:
		*e = GameStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for GameStatus: %T", src)
	}
	return nil
}

type NullGameStatus struct {
	GameStatus GameStatus
	Valid      bool // Valid is true if GameStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGameStatus) Scan(value interface{}) error {
	if value == nil {
		ns.GameStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GameStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGameStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GameStatus), nil
}

type Competition struct {
	ID        uuid.UUID
	Name      string
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt sql.NullTime
}

type Game struct {
	ID         uuid.UUID
	SeasonID   uuid.UUID
	Round      int32
	Date       time.Time
	HomeTeamID uuid.UUID
	AwayTeamID uuid.UUID
	HomeScore  sql.NullInt32
	AwayScore  sql.NullInt32
	Status     GameStatus
	CreatedAt  time.Time
	UpdatedAt  time.Time
	DeletedAt  sql.NullTime
}

type Season struct {
	ID            uuid.UUID
	CompetitionID uuid.UUID
	StartDate     time.Time
	EndDate       time.Time
	Rounds        int32
	CreatedAt     time.Time
	UpdatedAt     time.Time
	DeletedAt     sql.NullTime
}

type SeasonTeam struct {
	ID        uuid.UUID
	SeasonID  uuid.UUID
	TeamID    uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt sql.NullTime
}

type Team struct {
	ID           uuid.UUID
	Name         string
	Abbreviation string
	Location     string
	CreatedAt    time.Time
	UpdatedAt    time.Time
	DeletedAt    sql.NullTime
}

type User struct {
	ID    int32
	Name  string
	Email string
}
